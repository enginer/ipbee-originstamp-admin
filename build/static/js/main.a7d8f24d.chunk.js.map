{"version":3,"sources":["utils.ts","OriginstampAbi.ts","components/transfer-ownership.tsx","components/bulk-register-documents.tsx","components/check-document.tsx","components/register-document.tsx","components/register-new-version.tsx","components/bulk-register-new-versions.tsx","app.tsx","index.tsx"],"names":["_contract","OriginstampAbi","contractAddress","getContract","library","a","contract","Contract","getSigner","deployed","defaultConfig","gasLimit","handleTransactionError","e","alert","TransferOwnership","useWeb3React","useState","loading","setLoading","hash","setHash","className","placeholder","type","required","name","onChange","event","target","value","onClick","then","transferOwnership","tx","wait","console","error","BulkRegisterDocuments","emptyObject","date","items","setItems","map","item","index","updated","replaceAll","setDate","replace","length","style","display","justifyContent","width","marginTop","hashes","dates","Math","floor","Date","getTime","registerMultiply","log","marginLeft","CheckDocument","registeredAt","setRegisteredAt","validUntil","setValidUntil","newVersion","setNewVersion","docRegistrationTime","registrationTimestamp","isZero","toNumber","toLocaleString","validUntilTimestamp","newVersions","newVersionRaw","Number","RegisterDocument","setTx","unixTimestamp","register","href","RegisterNewVersion","oldHash","setOldHash","newHash","setNewHash","registerNewVersion","BulkRegisterNewVersions","oldHashes","newHashes","registerNewVersionMultiply","App","account","active","activate","connector","setError","deactivate","owner","setOwner","changeNetwork","ethereum","window","chainIdHex","Web3","utils","toHex","polygonChainId","request","method","params","chainId","code","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","useEffect","injected","UnsupportedChainIdError","UserRejectedRequestError","currentChainId","InjectedConnector","supportedChainIds","getLibrary","provider","Web3Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7d8f24d.chunk.js","sourcesContent":["import {Web3Provider} from \"@ethersproject/providers\";\r\nimport {Originstamp} from \"./contracts/originstamp\";\r\nimport {OriginstampAbi} from \"./OriginstampAbi\";\r\nimport {Contract} from \"@ethersproject/contracts\";\r\n\r\nexport const contractAddress = '0x3aE064c3c15254e5669270069Ca40055D1050561' //'0x3a60d9d5f70ad0b56d602e71fc1653d11fce5d89'\r\nlet _contract: Originstamp\r\n\r\nexport async function getContract(library: Web3Provider): Promise<Originstamp> {\r\n    if (!_contract) {\r\n        const contract = new Contract(\r\n            contractAddress,\r\n            OriginstampAbi.abi,\r\n            library.getSigner()\r\n        )\r\n        await contract.deployed()\r\n        _contract = contract as unknown as Originstamp\r\n    }\r\n    return _contract\r\n}\r\n\r\nexport const defaultConfig = { gasLimit: 500000 }\r\n\r\nexport const add0x = (hash) => {\r\n    if (!hash) return hash\r\n\r\n    return \"0x\" + hash.replace(\"0x\", \"\")\r\n}\r\n\r\nexport const handleTransactionError = (e) => {\r\n    alert('Transaction Failed!\\nUse \"Open Last Transaction\" link for error details')\r\n}\r\n","export const OriginstampAbi = {\n    \"_format\": \"hh-sol-artifact-1\",\n    \"contractName\": \"Originstamp\",\n    \"sourceName\": \"contracts/Originstamp.sol\",\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"newDocHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"expiredDocHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"NewVersionRegistered\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"docHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"validUntil\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"Registered\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"docRegistrationTime\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"newVersions\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"owner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_docHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_validUntil\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"register\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32[]\",\n                    \"name\": \"_docHashes\",\n                    \"type\": \"bytes32[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"_validUntil\",\n                    \"type\": \"uint256[]\"\n                }\n            ],\n            \"name\": \"registerMultiply\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_newDocHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_expiredDocHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_newDocValidUntil\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"registerNewVersion\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32[]\",\n                    \"name\": \"_newDocHashes\",\n                    \"type\": \"bytes32[]\"\n                },\n                {\n                    \"internalType\": \"bytes32[]\",\n                    \"name\": \"_expiredDocHashes\",\n                    \"type\": \"bytes32[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"_newDocValidUntil\",\n                    \"type\": \"uint256[]\"\n                }\n            ],\n            \"name\": \"registerNewVersionMultiply\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"transferOwnership\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"validUntil\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ],\n    \"bytecode\": \"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611445806100606000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063ad49536911610066578063ad4953691461011e578063bc58e65d1461014e578063d53fcbec1461016a578063f2fde38b1461019a578063ff3617f8146101b657610093565b806305c3480b146100985780630d49e76c146100c8578063283bec10146100e45780638da5cb5b14610100575b600080fd5b6100b260048036038101906100ad9190610c33565b6101d2565b6040516100bf9190610ff4565b60405180910390f35b6100e260048036038101906100dd9190610bb2565b6101ea565b005b6100fe60048036038101906100f99190610afe565b610324565b005b6101086104c2565b6040516101159190610e7e565b60405180910390f35b61013860048036038101906101339190610c33565b6104e6565b6040516101459190610e99565b60405180910390f35b61016860048036038101906101639190610c60565b6104fe565b005b610184600480360381019061017f9190610c33565b6106f5565b6040516101919190610ff4565b60405180910390f35b6101b460048036038101906101af9190610ad1565b61070d565b005b6101d060048036038101906101cb9190610cb3565b61084e565b005b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610eb4565b60405180910390fd5b8181905084849050146102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790610f14565b60405180910390fd5b60005b8484905081101561031d5761030a8585838181106102e4576102e36110de565b5b905060200201358484848181106102fe576102fd6110de565b5b9050602002013561084e565b808061031590611066565b9150506102c3565b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610eb4565b60405180910390fd5b8383905086869050146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610f54565b60405180910390fd5b818190508686905014610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990610f74565b60405180910390fd5b60005b868690508110156104b9576104a6878783818110610466576104656110de565b5b905060200201358686848181106104805761047f6110de565b5b9050602002013585858581811061049a576104996110de565b5b905060200201356104fe565b80806104b190611066565b915050610445565b50505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610eb4565b60405180910390fd5b600060016000858152602001908152602001600020549050600081146105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90610f94565b60405180910390fd5b60006001600085815260200190815260200160002054905060008111610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063990610f34565b60405180910390fd5b6000600360008681526020019081526020016000205490506000811461069d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069490610fd4565b60405180910390fd5b6106a7868561084e565b85600360008781526020019081526020016000208190555084867fb5dac8ad49578955a20b2a5179573fe2be183efb3659e0daded600bd59b3975e60405160405180910390a3505050505050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290610eb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610ef4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390610eb4565b60405180910390fd5b60006001600084815260200190815260200160002054905060008114610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90610ed4565b60405180910390fd5b600082111561099b57428211610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990610fb4565b60405180910390fd5b8160026000858152602001908152602001600020819055505b42600160008581526020019081526020016000208190555081837fc8704a622f3eb8c9fc5a2ddf1775b5ea7695359b13dec8111874e266a4d5fbc960405160405180910390a3505050565b6000813590506109f5816113ca565b92915050565b60008083601f840112610a1157610a10611112565b5b8235905067ffffffffffffffff811115610a2e57610a2d61110d565b5b602083019150836020820283011115610a4a57610a49611117565b5b9250929050565b60008083601f840112610a6757610a66611112565b5b8235905067ffffffffffffffff811115610a8457610a8361110d565b5b602083019150836020820283011115610aa057610a9f611117565b5b9250929050565b600081359050610ab6816113e1565b92915050565b600081359050610acb816113f8565b92915050565b600060208284031215610ae757610ae6611121565b5b6000610af5848285016109e6565b91505092915050565b60008060008060008060608789031215610b1b57610b1a611121565b5b600087013567ffffffffffffffff811115610b3957610b3861111c565b5b610b4589828a016109fb565b9650965050602087013567ffffffffffffffff811115610b6857610b6761111c565b5b610b7489828a016109fb565b9450945050604087013567ffffffffffffffff811115610b9757610b9661111c565b5b610ba389828a01610a51565b92509250509295509295509295565b60008060008060408587031215610bcc57610bcb611121565b5b600085013567ffffffffffffffff811115610bea57610be961111c565b5b610bf6878288016109fb565b9450945050602085013567ffffffffffffffff811115610c1957610c1861111c565b5b610c2587828801610a51565b925092505092959194509250565b600060208284031215610c4957610c48611121565b5b6000610c5784828501610aa7565b91505092915050565b600080600060608486031215610c7957610c78611121565b5b6000610c8786828701610aa7565b9350506020610c9886828701610aa7565b9250506040610ca986828701610abc565b9150509250925092565b60008060408385031215610cca57610cc9611121565b5b6000610cd885828601610aa7565b9250506020610ce985828601610abc565b9150509250929050565b610cfc81611020565b82525050565b610d0b81611032565b82525050565b6000610d1e60158361100f565b9150610d2982611126565b602082019050919050565b6000610d4160208361100f565b9150610d4c8261114f565b602082019050919050565b6000610d64601d8361100f565b9150610d6f82611178565b602082019050919050565b6000610d87603c8361100f565b9150610d92826111a1565b604082019050919050565b6000610daa60298361100f565b9150610db5826111f0565b604082019050919050565b6000610dcd604b8361100f565b9150610dd88261123f565b606082019050919050565b6000610df060408361100f565b9150610dfb826112b4565b604082019050919050565b6000610e1360248361100f565b9150610e1e82611303565b604082019050919050565b6000610e36601f8361100f565b9150610e4182611352565b602082019050919050565b6000610e5960338361100f565b9150610e648261137b565b604082019050919050565b610e788161105c565b82525050565b6000602082019050610e936000830184610cf3565b92915050565b6000602082019050610eae6000830184610d02565b92915050565b60006020820190508181036000830152610ecd81610d11565b9050919050565b60006020820190508181036000830152610eed81610d34565b9050919050565b60006020820190508181036000830152610f0d81610d57565b9050919050565b60006020820190508181036000830152610f2d81610d7a565b9050919050565b60006020820190508181036000830152610f4d81610d9d565b9050919050565b60006020820190508181036000830152610f6d81610dc0565b9050919050565b60006020820190508181036000830152610f8d81610de3565b9050919050565b60006020820190508181036000830152610fad81610e06565b9050919050565b60006020820190508181036000830152610fcd81610e29565b9050919050565b60006020820190508181036000830152610fed81610e4c565b9050919050565b60006020820190506110096000830184610e6f565b92915050565b600082825260208201905092915050565b600061102b8261103c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110718261105c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a4576110a36110af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f53656e646572206e6f7420617574686f72697a65640000000000000000000000600082015250565b7f446f63756d656e74206861736820616c72656164792072656769737465726564600082015250565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b7f446f63756d656e74732068617368206c69737420616e642076616c696420756e60008201527f74696c206c6973742073686f756c642062652073616d652073697a6500000000602082015250565b7f4578706972656420646f63756d656e7420686173682077657265206e6f74207260008201527f6567697374657265640000000000000000000000000000000000000000000000602082015250565b7f4e657720646f63756d656e74732068617368206c69737420616e64206578706960008201527f72656420646f63756d656e74732068617368206c6973742073686f756c64206260208201527f652073616d652073697a65000000000000000000000000000000000000000000604082015250565b7f4e657720646f63756d656e74732068617368206c69737420616e642076616c6960008201527f6420756e74696c206c6973742073686f756c642062652073616d652073697a65602082015250565b7f4e657720646f63756d656e74206861736820616c72656164792072656769737460008201527f6572656400000000000000000000000000000000000000000000000000000000602082015250565b7f56616c696420756e74696c2073686f756c6420626520696e2066757475726500600082015250565b7f4578706972656420646f63756d656e7420616c726561647920686173206e657760008201527f2076657273696f6e207265676973746572656400000000000000000000000000602082015250565b6113d381611020565b81146113de57600080fd5b50565b6113ea81611032565b81146113f557600080fd5b50565b6114018161105c565b811461140c57600080fd5b5056fea2646970667358221220ab75096a7fc82af4822fc18e4da7edc25681084f06a4ff128d8d1c1ef1a31c0464736f6c63430008070033\",\n    \"deployedBytecode\": \"0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063ad49536911610066578063ad4953691461011e578063bc58e65d1461014e578063d53fcbec1461016a578063f2fde38b1461019a578063ff3617f8146101b657610093565b806305c3480b146100985780630d49e76c146100c8578063283bec10146100e45780638da5cb5b14610100575b600080fd5b6100b260048036038101906100ad9190610c33565b6101d2565b6040516100bf9190610ff4565b60405180910390f35b6100e260048036038101906100dd9190610bb2565b6101ea565b005b6100fe60048036038101906100f99190610afe565b610324565b005b6101086104c2565b6040516101159190610e7e565b60405180910390f35b61013860048036038101906101339190610c33565b6104e6565b6040516101459190610e99565b60405180910390f35b61016860048036038101906101639190610c60565b6104fe565b005b610184600480360381019061017f9190610c33565b6106f5565b6040516101919190610ff4565b60405180910390f35b6101b460048036038101906101af9190610ad1565b61070d565b005b6101d060048036038101906101cb9190610cb3565b61084e565b005b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610eb4565b60405180910390fd5b8181905084849050146102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790610f14565b60405180910390fd5b60005b8484905081101561031d5761030a8585838181106102e4576102e36110de565b5b905060200201358484848181106102fe576102fd6110de565b5b9050602002013561084e565b808061031590611066565b9150506102c3565b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610eb4565b60405180910390fd5b8383905086869050146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610f54565b60405180910390fd5b818190508686905014610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990610f74565b60405180910390fd5b60005b868690508110156104b9576104a6878783818110610466576104656110de565b5b905060200201358686848181106104805761047f6110de565b5b9050602002013585858581811061049a576104996110de565b5b905060200201356104fe565b80806104b190611066565b915050610445565b50505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610eb4565b60405180910390fd5b600060016000858152602001908152602001600020549050600081146105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90610f94565b60405180910390fd5b60006001600085815260200190815260200160002054905060008111610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063990610f34565b60405180910390fd5b6000600360008681526020019081526020016000205490506000811461069d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069490610fd4565b60405180910390fd5b6106a7868561084e565b85600360008781526020019081526020016000208190555084867fb5dac8ad49578955a20b2a5179573fe2be183efb3659e0daded600bd59b3975e60405160405180910390a3505050505050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290610eb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610ef4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390610eb4565b60405180910390fd5b60006001600084815260200190815260200160002054905060008114610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90610ed4565b60405180910390fd5b600082111561099b57428211610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990610fb4565b60405180910390fd5b8160026000858152602001908152602001600020819055505b42600160008581526020019081526020016000208190555081837fc8704a622f3eb8c9fc5a2ddf1775b5ea7695359b13dec8111874e266a4d5fbc960405160405180910390a3505050565b6000813590506109f5816113ca565b92915050565b60008083601f840112610a1157610a10611112565b5b8235905067ffffffffffffffff811115610a2e57610a2d61110d565b5b602083019150836020820283011115610a4a57610a49611117565b5b9250929050565b60008083601f840112610a6757610a66611112565b5b8235905067ffffffffffffffff811115610a8457610a8361110d565b5b602083019150836020820283011115610aa057610a9f611117565b5b9250929050565b600081359050610ab6816113e1565b92915050565b600081359050610acb816113f8565b92915050565b600060208284031215610ae757610ae6611121565b5b6000610af5848285016109e6565b91505092915050565b60008060008060008060608789031215610b1b57610b1a611121565b5b600087013567ffffffffffffffff811115610b3957610b3861111c565b5b610b4589828a016109fb565b9650965050602087013567ffffffffffffffff811115610b6857610b6761111c565b5b610b7489828a016109fb565b9450945050604087013567ffffffffffffffff811115610b9757610b9661111c565b5b610ba389828a01610a51565b92509250509295509295509295565b60008060008060408587031215610bcc57610bcb611121565b5b600085013567ffffffffffffffff811115610bea57610be961111c565b5b610bf6878288016109fb565b9450945050602085013567ffffffffffffffff811115610c1957610c1861111c565b5b610c2587828801610a51565b925092505092959194509250565b600060208284031215610c4957610c48611121565b5b6000610c5784828501610aa7565b91505092915050565b600080600060608486031215610c7957610c78611121565b5b6000610c8786828701610aa7565b9350506020610c9886828701610aa7565b9250506040610ca986828701610abc565b9150509250925092565b60008060408385031215610cca57610cc9611121565b5b6000610cd885828601610aa7565b9250506020610ce985828601610abc565b9150509250929050565b610cfc81611020565b82525050565b610d0b81611032565b82525050565b6000610d1e60158361100f565b9150610d2982611126565b602082019050919050565b6000610d4160208361100f565b9150610d4c8261114f565b602082019050919050565b6000610d64601d8361100f565b9150610d6f82611178565b602082019050919050565b6000610d87603c8361100f565b9150610d92826111a1565b604082019050919050565b6000610daa60298361100f565b9150610db5826111f0565b604082019050919050565b6000610dcd604b8361100f565b9150610dd88261123f565b606082019050919050565b6000610df060408361100f565b9150610dfb826112b4565b604082019050919050565b6000610e1360248361100f565b9150610e1e82611303565b604082019050919050565b6000610e36601f8361100f565b9150610e4182611352565b602082019050919050565b6000610e5960338361100f565b9150610e648261137b565b604082019050919050565b610e788161105c565b82525050565b6000602082019050610e936000830184610cf3565b92915050565b6000602082019050610eae6000830184610d02565b92915050565b60006020820190508181036000830152610ecd81610d11565b9050919050565b60006020820190508181036000830152610eed81610d34565b9050919050565b60006020820190508181036000830152610f0d81610d57565b9050919050565b60006020820190508181036000830152610f2d81610d7a565b9050919050565b60006020820190508181036000830152610f4d81610d9d565b9050919050565b60006020820190508181036000830152610f6d81610dc0565b9050919050565b60006020820190508181036000830152610f8d81610de3565b9050919050565b60006020820190508181036000830152610fad81610e06565b9050919050565b60006020820190508181036000830152610fcd81610e29565b9050919050565b60006020820190508181036000830152610fed81610e4c565b9050919050565b60006020820190506110096000830184610e6f565b92915050565b600082825260208201905092915050565b600061102b8261103c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110718261105c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a4576110a36110af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f53656e646572206e6f7420617574686f72697a65640000000000000000000000600082015250565b7f446f63756d656e74206861736820616c72656164792072656769737465726564600082015250565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b7f446f63756d656e74732068617368206c69737420616e642076616c696420756e60008201527f74696c206c6973742073686f756c642062652073616d652073697a6500000000602082015250565b7f4578706972656420646f63756d656e7420686173682077657265206e6f74207260008201527f6567697374657265640000000000000000000000000000000000000000000000602082015250565b7f4e657720646f63756d656e74732068617368206c69737420616e64206578706960008201527f72656420646f63756d656e74732068617368206c6973742073686f756c64206260208201527f652073616d652073697a65000000000000000000000000000000000000000000604082015250565b7f4e657720646f63756d656e74732068617368206c69737420616e642076616c6960008201527f6420756e74696c206c6973742073686f756c642062652073616d652073697a65602082015250565b7f4e657720646f63756d656e74206861736820616c72656164792072656769737460008201527f6572656400000000000000000000000000000000000000000000000000000000602082015250565b7f56616c696420756e74696c2073686f756c6420626520696e2066757475726500600082015250565b7f4578706972656420646f63756d656e7420616c726561647920686173206e657760008201527f2076657273696f6e207265676973746572656400000000000000000000000000602082015250565b6113d381611020565b81146113de57600080fd5b50565b6113ea81611032565b81146113f557600080fd5b50565b6114018161105c565b811461140c57600080fd5b5056fea2646970667358221220ab75096a7fc82af4822fc18e4da7edc25681084f06a4ff128d8d1c1ef1a31c0464736f6c63430008070033\",\n    \"linkReferences\": {},\n    \"deployedLinkReferences\": {}\n}\n","import React, {useState} from \"react\";\nimport {defaultConfig, getContract} from \"../utils\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nexport function TransferOwnership() {\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n    const [hash, setHash] = useState('')\n\n    function transferHandler() {\n        if (!hash) return\n        getContract(library).then( async (contract) => {\n            setLoading(true)\n            try {\n                const tx = await contract.transferOwnership(hash, defaultConfig)\n                await tx.wait()\n            } catch (e) {\n                console.error(e)\n            }\n            setLoading(false)\n        })\n    }\n\n    return (\n        <div className={'transfer section'}>\n            <h3 className={'transfer-title'}>transfer ownership</h3>\n            <div className=\"transfer-form\">\n                <input className={'transfer-input'} placeholder={'new owner address'} type=\"text\" required\n                       name={'new-own-address'} onChange={(event) => setHash(event.target.value)}/>\n                { loading ? ('Loading...') : (\n                    <a className={'transfer-btn btn'} onClick={transferHandler}>transfer</a>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {defaultConfig, getContract} from \"../utils\";\nimport {BigNumber} from \"ethers\";\n\ninterface DocumentItem {\n    hash: string,\n    date?: string\n}\n\nexport function BulkRegisterDocuments() {\n    const emptyObject: DocumentItem = { hash: '', date: ''}\n    const [items, setItems] = useState<Partial<DocumentItem>[]>([emptyObject])\n\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n\n    function registerHandler() {\n        getContract(library).then( async (contract) => {\n            setLoading(true)\n            try {\n                const hashes = items.map( item => item.hash)\n                const dates = items.map( item => {\n                    return item.date ? Math.floor(new Date(item.date).getTime() / 1000) : 0\n                })\n                const tx = await contract.registerMultiply(hashes, dates, defaultConfig)\n                console.log(`https://polygonscan.com/tx/${tx.hash}`)\n                await tx.wait()\n            } catch (e) {\n                console.error(e)\n            }\n            setLoading(false)\n        })\n    }\n\n    const setHash = (index, value) => {\n        const updated = [...items]\n        updated[index].hash = value\n        setItems(updated)\n    }\n    const setDate = (index, value) => {\n        const updated = [...items]\n        updated[index].date = value.replaceAll(\".\", \"-\")\n        setItems(updated)\n    }\n    return (\n        <div className={'bulk section'}>\n            <h3 className={'bulk-title'}>registrate bulk of documents</h3>\n            <div className={'bulk-form'}>\n                {items.map((item, index) => (\n                    <div>\n                        <div className={'second-container-bulk'}>\n                            <input className={'bulk-input-one'} type=\"text\"\n                                   required placeholder={'hash'} name={'hash'}\n                                   value={item.hash}\n                                   onChange={(event) => setHash(index, event.target.value)}/>\n                            <div className=\"bulk-until\">\n                                <input className={'bulk-input-two'} type=\"date\" placeholder={'valid until'}\n                                       name={'valid-until'}\n                                       value={item.date}\n                                       onChange={(event) => setDate(index, event.target.value.replace(\"-\", \".\").replace(\"-\", \".\"))}/>\n                            </div>\n                            {index === items.length - 1 &&\n                                <a className={'bulk-form-plus'} onClick={() => setItems([...items, emptyObject])}>+</a>\n                            }\n                        </div>\n                    </div>\n                ))}\n                <div className={'bulk-form-btn-container'} style={{display: 'flex', justifyContent: 'center', width: '100%', marginTop: '20px'}}>\n                    { loading ? ('Loading...') : (\n                        <button className={'btn register-btn'} onClick={registerHandler} type={'submit'}>register all at once</button>\n                    )}\n                    <button className={'btn clear-btn'} onClick={() => setItems([emptyObject])} style={{marginLeft: '20px'}}>clear</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {getContract} from \"../utils\";\n\nexport function CheckDocument() {\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n    const [hash, setHash] = useState('')\n    const [registeredAt, setRegisteredAt] = useState('Undefined')\n    const [validUntil, setValidUntil] = useState('Undefined')\n    const [newVersion, setNewVersion] = useState('Undefined')\n\n    function checkBtn() {\n        getContract(library).then( async (contract) => {\n            if (!hash) return\n            setLoading(true)\n            try {\n                const registrationTimestamp = await contract.docRegistrationTime(hash)\n                setRegisteredAt(registrationTimestamp.isZero() ? 'Undefined' : new Date(registrationTimestamp.toNumber() * 1000).toLocaleString())\n                const validUntilTimestamp = await contract.validUntil(hash)\n                setValidUntil(validUntilTimestamp.isZero() ? 'Undefined' : new Date(validUntilTimestamp.toNumber() * 1000).toLocaleString())\n                const newVersionRaw = await contract.newVersions(hash);\n                setNewVersion(Number(newVersionRaw) ? newVersionRaw : 'No')\n            } catch (e) {\n                console.error(e)\n            }\n            setLoading(false)\n        })\n    }\n\n    return (\n        <div className={'check'}>\n            <h3>check document</h3>\n            <div className={'check-form'}>\n                <input className={'check-input'} type=\"text\" placeholder={'hash'} name={'hash'} required\n                       onChange={(event) => setHash(event.target.value)}/>\n                { loading ? ('Loading...') : (<button className={'check-btn btn'} onClick={checkBtn} type={'submit'}>check</button>)}\n            </div>\n            <div className={'check-info'}>\n                <p className={'check-info-one'}>registered at<span className={'check-info-one-span'}>{registeredAt}</span></p>\n                <p className={'check-info-one check-info-second'}>valid until<span\n                    className={'check-info-two-span'}>{validUntil}</span></p>\n                <p className={'check-info-one'}>new version<span\n                    className={'check-info-three-span'}>{newVersion}</span></p>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {defaultConfig, getContract, handleTransactionError} from \"../utils\";\n\nexport function RegisterDocument() {\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n    const [hash, setHash] = useState('')\n    const [date, setDate] = useState('')\n    const [tx, setTx] = useState('')\n\n    function registerHandler() {\n        if (!hash) return\n        setTx('')\n        getContract(library).then( async (contract) => {\n            setLoading(true)\n            try {\n                const unixTimestamp = date ? Math.floor(new Date(date).getTime() / 1000) : 0\n                const tx = await contract.register(hash, unixTimestamp, defaultConfig)\n                setTx(tx.hash)\n                await tx.wait()\n            } catch (e) {\n                handleTransactionError(e)\n            }\n            setLoading(false)\n        })\n    }\n\n\n    return (\n        <div className={'register section'}>\n            <h3 className={'register-title'}>registrate new document</h3>\n            <div className=\"register-form\">\n                <input className={'register-input-one'} type=\"text\" placeholder={'hash'} name={'hash'} required\n                       onChange={(event) => setHash(event.target.value)}/>\n                <div className={'register-form-input-two'}>\n                    <input className={'register-input-two'} type=\"date\" placeholder={'valid until'}\n                           onChange={(event) => setDate(event.target.value)}/>\n                </div>\n                { loading ? ('Loading...') : (\n                    <button className={'btn register-btn'} onClick={registerHandler} type={'submit'}>register</button>\n                )}\n            </div>\n            {tx && <div className='tx-link'>\n                <a target='_blank' href={`https://polygonscan.com/tx/${tx}`}>Open Last Transaction</a>\n            </div>}\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {defaultConfig, getContract, handleTransactionError} from \"../utils\";\nimport {BigNumber} from \"ethers\";\n\nexport function RegisterNewVersion() {\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n    const [oldHash, setOldHash] = useState('')\n    const [newHash, setNewHash] = useState('')\n    const [date, setDate] = useState('')\n    const [tx, setTx] = useState('')\n\n    function registerHandler() {\n        if (!oldHash || !newHash) return\n        getContract(library).then( async (contract) => {\n            setLoading(true)\n            try {\n                const unixTimestamp = date ? Math.floor(new Date(date).getTime() / 1000) : 0\n                const tx = await contract.registerNewVersion(newHash, oldHash, unixTimestamp, defaultConfig)\n                setTx(tx.hash)\n                await tx.wait()\n            } catch (e) {\n                handleTransactionError(e)\n            }\n            setLoading(false)\n        })\n    }\n\n    return (\n        <div className={'version section'}>\n            <h3 className={'version-title'}>registrate new version of document</h3>\n            <div className={'version-form'}>\n                <div className={'version-form-container'}>\n                    <input className={'version-input-old'} type=\"text\" placeholder={'old document hash'} required\n                           name={'old hash'} onChange={(event) => setOldHash(event.target.value)}/>\n                    <input className={'version-input-new'} type=\"text\" placeholder={'new document hash'} required\n                           name={'old hash'} onChange={(event) => setNewHash(event.target.value)}/>\n                </div>\n                <div className=\"version-until\">\n                    <input className={'version-until-input'} type=\"date\" placeholder={'valid until'}\n                           name={'valid-until'}\n                           onChange={(event) => setDate(event.target.value.replace(\"-\", \".\").replace(\"-\", \".\"))}/>\n                </div>\n                { loading ? ('Loading...') : (\n                    <button className={'btn register-btn'} onClick={registerHandler} type={'submit'}>register</button>\n                )}\n            </div>\n            {tx && <div className='tx-link'>\n                <a target='_blank' href={`https://polygonscan.com/tx/${tx}`}>Open Last Transaction</a>\n            </div>}\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {defaultConfig, getContract} from \"../utils\";\n\ninterface NewVersionItem {\n    oldHash: string,\n    newHash: string,\n    date?: string\n}\n\nexport function BulkRegisterNewVersions() {\n    const emptyObject: NewVersionItem = { oldHash: '', newHash: '', date: ''}\n    const [items, setItems] = useState<Partial<NewVersionItem>[]>([emptyObject])\n\n    const { library } = useWeb3React()\n    const [loading, setLoading] = useState(false)\n\n    function registerHandler() {\n        getContract(library).then( async (contract) => {\n            setLoading(true)\n            try {\n                const oldHashes = items.map( item => item.oldHash)\n                const newHashes = items.map( item => item.newHash)\n                const dates = items.map( item => {\n                    return item.date ? Math.floor(new Date(item.date).getTime() / 1000) : 0\n                })\n                const tx = await contract.registerNewVersionMultiply(newHashes, oldHashes, dates, defaultConfig)\n                console.log(`https://polygonscan.com/tx/${tx.hash}`)\n                await tx.wait()\n            } catch (e) {\n                console.error(e)\n            }\n            setLoading(false)\n        })\n    }\n\n    const setOldHash = (index, value) => {\n        const updated = [...items]\n        updated[index].oldHash = value\n        setItems(updated)\n    }\n    const setNewHash = (index, value) => {\n        const updated = [...items]\n        updated[index].newHash = value\n        setItems(updated)\n    }\n    const setDate = (index, value) => {\n        const updated = [...items]\n        updated[index].date = value.replaceAll(\".\", \"-\")\n        setItems(updated)\n    }\n    return (\n        <div className={'new-versions section'}>\n            <h3 className={'new-versions-title'}>registrate bulk of new versions of documents</h3>\n            {items.map((item, index) => (\n                <div className=\"new-versions-form\">\n                    <input className={'new-versions-input-old'} type=\"text\" placeholder={'old document hash'} required\n                           name={'old hash'}\n                           onChange={(event) => setOldHash(index, event.target.value)}/>\n                    <input className={'new-versions-input-new'} type=\"text\" placeholder={'new document hash'} required\n                           name={'new hash'}\n                           onChange={(event) => setNewHash(index, event.target.value)}/>\n                    <input className={'new-versions-until-input'} type=\"date\" placeholder={'valid until'}\n                           name={'valid-until'}\n                           onChange={(event) => setDate(index, event.target.value)}/>\n                    {index === items.length - 1 &&\n                        <a className={'new-versions-form-plus'} onClick={() => setItems([...items, emptyObject])}>+</a>\n                    }\n                </div>\n            ))}\n\n            <div className={'bulk-form-btn-container'} style={{display: 'flex', justifyContent: 'center', width: '100%', marginTop: '20px'}}>\n                { loading ? ('Loading...') : (\n                    <button className={'btn register-btn'} onClick={registerHandler} type={'submit'}>register all at once</button>\n                )}\n                <button className={'btn clear-btn'} onClick={() => setItems([emptyObject])} style={{marginLeft: '20px'}}>clear</button>\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\r\nimport {TransferOwnership} from \"./components/transfer-ownership\";\r\nimport {BulkRegisterDocuments} from \"./components/bulk-register-documents\";\r\nimport {CheckDocument} from \"./components/check-document\";\r\nimport {RegisterDocument} from \"./components/register-document\";\r\nimport {RegisterNewVersion} from \"./components/register-new-version\";\r\nimport {UnsupportedChainIdError, useWeb3React} from \"@web3-react/core\";\r\nimport {currentChainId, injected, polygonChainId} from \"./index\";\r\nimport {UserRejectedRequestError} from \"@web3-react/injected-connector\";\r\nimport Web3 from \"web3\";\r\n\r\nimport './css/main.css'\r\nimport {contractAddress, getContract} from \"./utils\";\r\nimport { BulkRegisterNewVersions } from \"./components/bulk-register-new-versions\";\r\n\r\ninterface AddEthereumChainParameter {\r\n    chainId: string; // A 0x-prefixed hexadecimal string\r\n    chainName: string;\r\n    nativeCurrency: {\r\n        name: string;\r\n        symbol: string; // 2-6 characters long\r\n        decimals: 18;\r\n    };\r\n    rpcUrls: string[];\r\n    blockExplorerUrls?: string[];\r\n    iconUrls?: string[]; // Currently ignored.\r\n}\r\n\r\nexport const App: React.FC = () => {\r\n    const { active, account, library, connector, activate, setError, deactivate } = useWeb3React()\r\n    const [owner, setOwner] = useState('')\r\n\r\n    const changeNetwork = async () => {\r\n        let ethereum = window['ethereum'];\r\n        if (ethereum) {\r\n            const chainIdHex = Web3.utils.toHex(polygonChainId)\r\n            try {\r\n                await ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{chainId: chainIdHex}]\r\n                })\r\n            } catch (switchError) {\r\n                // This error code indicates that the chain has not been added to MetaMask.\r\n                if (switchError.code === 4902) {\r\n                    try {\r\n                        await ethereum.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{\r\n                                chainId: chainIdHex,\r\n                                chainName: 'Polygon Mainnet',\r\n                                nativeCurrency: {\r\n                                    name: 'MATIC',\r\n                                    symbol: 'MATIC',\r\n                                    decimals: 18\r\n                                },\r\n                                rpcUrls: ['https://rpc-mainnet.maticvigil.com'],\r\n                                blockExplorerUrls: ['https://polygonscan.com']\r\n                            } as AddEthereumChainParameter],\r\n                        });\r\n                    } catch (addError) {\r\n                        console.error(addError)\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.error('No ethereum');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        activate(injected,async (error) => {\r\n            if (error instanceof UnsupportedChainIdError) {\r\n                await changeNetwork()\r\n            }\r\n            else if (error instanceof UserRejectedRequestError) {\r\n                // ignore user rejected error\r\n            } else {\r\n                setError(error)\r\n            }\r\n        }, false)\r\n    }, [])\r\n\r\n    if (account && !owner) {\r\n        getContract(library).then( async (contract) => {\r\n            setOwner(await contract.owner())\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={'container'}>\r\n            { account && <div className=\"address\">Connected to { owner === account && <strong>Owner </strong>}<div><a href={`https://polygonscan.com/address/${account}`} target='_blank'>{account}</a></div></div>}\r\n            <CheckDocument />\r\n            <RegisterDocument />\r\n            <RegisterNewVersion />\r\n            <BulkRegisterDocuments />\r\n            <BulkRegisterNewVersions />\r\n            <TransferOwnership />\r\n            <div className='bottom'>Smart Contract Address: <a href={`https://polygonscan.com/address/${contractAddress}`} target='_blank'>{contractAddress}</a></div>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {App} from \"./app\";\r\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\r\nimport {Web3Provider} from \"@ethersproject/providers\";\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\n\r\nexport const polygonChainId = 137\r\nexport const currentChainId = polygonChainId\r\n\r\nexport const injected = new InjectedConnector({\r\n   supportedChainIds: [currentChainId]\r\n})\r\n\r\nfunction getLibrary(provider) {\r\n   return new Web3Provider(provider)\r\n}\r\n\r\n(async () => {\r\n   ReactDOM.render(\r\n       <Web3ReactProvider getLibrary={getLibrary}>\r\n          <App />\r\n       </Web3ReactProvider>\r\n       , document.getElementById('root'))\r\n})()\r\n"],"sourceRoot":""}